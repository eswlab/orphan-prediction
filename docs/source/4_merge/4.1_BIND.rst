BIND prediction
=================

Merge gene predictions of **B** RAKER (``braker-final.gff3``) with gene predictions **IN** ferred **D** irectly (``DI-final.gff3``).

**See the scripts used for BIND** `here`_ **.**

*Note: See the details to generate these two predictions in* ``braker`` *and* ``DirectInf`` *.*

Input files for BIND
------------------------
    
.. code-block:: yaml

    BRAKER prediction: braker-final.gff3
    Direct Inference prediction: DI-final.gff3
    reference genome fasta file: TAIR10_chr_all.fas
    splice junction file: junctions.bed # from DirectInf step
    list of input prediction: list_BIND.txt


Consolidate all the transcripts from BRAKER and DirInf, and predict potential protein coding sequence
------------------------------------------------------------------------------------------------------

1. Make a configure file and prepare transcripts:

   You should prepare a ``list_BIND.txt`` as below to include gtf path (1st column), gtf abbrev (2nd column), stranded-specific or not (3rd column):

   .. code-block:: bash
       :linenos:

       braker-final.gff3    br    False
       DI-final.gff3 DI     False

   Then run the script as below:

   .. code-block:: bash
       :linenos:

       ./01_runMikado_round1.sh TAIR10_chr_all.fas junctions.bed list_BIND.txt BIND


   This will generate `BIND_prepared.fasta` file that will be used for predicting ORFs in the next step.

   *Note:* ``junctions.bed`` *is the same file generate from DirectInf step.*

| 2. Predict potential CDS from transcripts:

   .. code-block:: bash
       :linenos:

       ./02_runTransDecoder.sh BIND_prepared.fasta

   We will use `BIND_prepared.fasta.transdecoder.bed` in the next step.

   *Note: Here we only kept complete CDS for next step. You can revise* ``02_runTransDecoder.sh`` *to use both incomplete and complete CDS if you need.*

| 3. Pick best transcripts for each locus and annotate them as gene:

   .. code-block:: bash
       :linenos:

       ./03_runMikado_round2.sh BIND_prepared.fasta.transdecoder.bed BIND

   This will generate:

   .. code-block:: bash
       :linenos:

       mikado.metrics.tsv
       mikado.scores.tsv
       BIND.loci.gff3


Optional: Filter out transcripts with redundant CDS
----------------------------------------------------

.. code-block:: bash
    :linenos:

    ./04_rm_redundance.sh BIND.loci.gff3 TAIR10_chr_all.fas


Optional: Filter out transcripts whose predicted proteins mapped to transposon elements
----------------------------------------------------------------------------------------

.. code-block:: bash
    :linenos:

   ./05_TEsorter.sh filter.pep.fa BIND.loci.gff3


*Note:* ``filter.pep.fa`` *is an output from previous step for removing redundant CDSs. You can also use all protein sequence if you don't want to remove redundant CDSs.*


.. _here: https://github.com/eswlab/orphan-prediction/tree/master/scripts/BIND
